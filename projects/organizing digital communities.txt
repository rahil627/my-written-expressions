building digital communities:

## main
idea: can very easily organize digital communities. Organizing locally is difficult, as ways of life have to be taught; Organizing digitally would be very easy because people with similar interests would join. It doesn’t go against the grain. Although, going against the grain is what is necessary to progress societies.

discord communities and knowledge-based sites (Wiki, Gitbook, etc.) for:
my friends (VA, NY, TW—communes)
my family (immediate family)
specific interests:
nature-oriented DIY
grassroots
nature restoration
fighting games
tech artists that are trying to change the world
Taiwan!
Taitung!!! :o **local digital communities!!!!**
etc.

also, can organize jams:
follow your heart jam (self)
explore mediums jam (art)
change the world oriented jams
  - perhaps would need to create a non-game-oriented jam site like itch.io
fighting game jam!


## [todo] to knowledge-base.txt

### wikis
ordered by complexity

WikiMedia
  - used by Wikipedia (and Wikimedia, Wikidata, Wiktionary)
  - 1000+ config settings, 800+ extensions
  - intended for giant sites

TMWiki
  - seems like a WikiMedia contender, intended for large sites
  - perl

Wikia / Gamepedia / Fandom
  - for a long time it used a custom but out-dated branch of MediaWiki
  - Wikia rebranded as Fandom, migrating all content to the fandom domain, save an exceptional few
  - Gamepedia still exists, but it seems very product-specific, teaming with the owner of the product
  - I gather from the site, that it’s really just used for product specific wikis. I didn’t see any non-product wikis.

PMWiki
  - a simple Wiki, good syntax (closer to markdown)
  - php
  - no wysiwyg

DokuWiki
  - a simple wiki, **flat-file**, average syntax
  - php
  - many good reviews from people who tested many wikis
  - i tried it, and it works... it’s just very plain

MoinMoin
  - a simple wiki, **flat-file**, good syntax (closer to markdown)
  - **python**
  - seems quite out-dated as it hasn’t updated to v2; maybe should wait until v2 before using?

TiddlyWiki
  - flat-file, good syntax (WikiText), very modern (for 2020)
  - a single page javascript site, wherein content loads dynamically. The problem is that they load at the bottom of the site, and then, you have to close it, so navigating would be a bit more awkward.

GitHub Wiki
  - **a minimal wiki**, **flat-file**, **markdown-like syntax**, perhaps just generated by Jekyll?
  - the wiki is stored in another repo by GitHub. That repo can be accessed, allowing one to edit the content text files. **The file structure is simply a list of text content files!**
  - this is by far the best small solution, which can be used and easily migrate from in case the knowledge-base grows too large or messy



### other collaborative ‘knowledge management’ software
Google Docs
  - meh, never liked Google’s cloud stuff
  - although it could be a simple way to collab write stuff, I’m not sure about publishing... besides, I’d rather have a simple text file as the main source of content

GitBook
  - collaborative documentation management software
  - simple design, not sure if there are templates
  - used to be free, but now it charges money per user!! absolutely useless for public collaboration

Docusaurus
  - collaborative documentation management software
  - i don’t think it’s flat-file...

Notion
  - real-time collaborative knowledge management software
  - the iOS version wasn’t functioning when I tried it earlier this year, and anyway, extremely slow for a near empty project
    - **I don’t see a use for real-time collaboration. I don’t need to see other people typing, though cool, it’s not worth all the net-code it must go through.**

### other options?
Hugo / Jekyll / other SSGs
  - flat-file, markdown syntax and file extension (.md)
    - this make it easy to migrate from GitHub wiki
  - could host the content files on a hub to make it collaborative
    - maybe doesn’t have the conflict-solving power of wikis, or even Kirby
  - since I will be using one of these for my own personal sites, it’s would be nice to use the same software for everything
  - the main difference: Hugo is quick all-in-one-solution without plugins, whereas Jekyll can use RubyGems for plugins

Kirby
  - flat-file, markdown-like syntax
    - this make it easy to migrate from GitHub wiki
  - this offers the best of both worlds: editing with and without a web editor, though, I believe, there are optional editors, perhaps even web-editors made for Hugo and Jekyll...

### to make
minimal static site generator
  - all it should require is a list of text files (with or without markup), much like GitHub wiki
minimal wiki
  - flat-file, simple custom markup syntax, able to edit from the web, handling multiple edits better than a standard vcs (since a vcs is what would be used for a public ssg site)
    - though, perhaps vcs is enough?... I mean tons of people collaborate on large single projects through vcs...

### from a github wiki test repo
the github wiki is a repo itself!... then can find and edit the text..
https://gist.github.com/subfuzion/0d3f19c4f780a7d75ba2
...
okay! so the contents are PERFECT: just a few markdown files, not even front matter!! woo!

https://github.com/Rahil627/github-wiki-repo-test

so, at first, can begin all knowledge-bases with a GitHub wiki, then, when needed, can migrate to something heavier, perhaps a Hugo (or Jekyll), or Kirby, or DokuWiki (or TiddleWiki?). All of which are still avoid using databases (“flat-file”).

Hugo is a great start. Jekyll has plugin capability, that Hugo doesn’t. Kirby is a proper cms similar to Wordpress but I believe you can just edit the text files?, and DokuWiki seems like a very simple wiki that’s easy to edit (from the web at-least), TiddleWiki is a single page js site (though, i don’t like that “tiddles” are dynamically added to the bottom of the page.)

### Conclusion
start with GitHub wiki
then can either make my own minimal ssg with haxe; Or:
can migrate to either a ssg (Hugo, Jekyll...) or Kirby
then, if the content gets out of hand, can migrate to DokuWiki


resources:
https://www.quora.com/What-are-the-pros-and-cons-of-DokuWiki-and-Moinmoin?share=1
https://vaibhavkaushal.wordpress.com/2017/05/04/my-favorite-wiki/
https://en.m.wikipedia.org/wiki/Knowledge_management